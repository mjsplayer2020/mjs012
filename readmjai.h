/* ---------------------------------------------------------------------------------------------- 
 * 
 * プログラム概要 ： Newさくら麻雀(MJAIクライアント実装版)
 * バージョン     ： 0.1.2.0.194(クラス名をMJSReadTplogに変更)
 * プログラム名   ： mjs.exe
 * ファイル名     ： readmjai.h
 * クラス名       ： MJSReadMjai
 * 処理概要       ： MJAIログ読み込みクラス
 * Ver0.1.2作成日 ： 2023/10/07 22:32:26
 * 最終更新日     ： 2024/02/23 18:58:55
 * 
 * Copyright (c) 2022-2023 TechMileStoraJP, All rights reserved.
 * 
 * ---------------------------------------------------------------------------------------------- */

#pragma once

#ifndef MJSREADMJAI_H_INCLUDED
#define MJSREADMJAI_H_INCLUDED

#include "stdafx.h"

#include <windows.h>
#include "player.h"
#include "gui.h"

/* ---------------------------------------------------------------------------------------------- */
// 固定値
/* ---------------------------------------------------------------------------------------------- */

// 作業文字配列のサイズ
#define MJAI_LINE_BUF     1024     // ライン1行(fget処理の1ライン)のバッファサイズ
// #define MJAI_WORK_COL      320     // 項目数

/* ---------------------------------------------------------------------------------------------- */
// クラス定義
/* ---------------------------------------------------------------------------------------------- */
class MJSReadMjai
{

	// ------------------------------------------------------------------- 
	// 公開関数定義
	// ------------------------------------------------------------------- 
	public:

	// ライン用バッファ
	char line_buf[MJAI_LINE_BUF];                      // ライン処理用

	// 作業用文字配列
//	int  wk_str_count;                                 // 作業用文字配列の総数
//	char wk_str[MJAI_WORK_COL][MJAI_LINE_BUF];         // 作業用文字配列

	// ------------------------------------------------------------------- 
	// コンストラクタ
	// ------------------------------------------------------------------- 

	// コンストラクタ定義
	MJSReadMjai(){};

	// デストラクタ定義
	~MJSReadMjai(){};

	/* ----------------------------- */
	// 関数定義
	/* ----------------------------- */

	// 行読み込み
	void ReadlogMain();        // メイン処理
	void ReadlogInit();        // 初期化処理
	void ReadlogExec(MJSGui *gui);        // 読み込み実行処理
	void ReadlogPost();        // 後処理

	// Mjscore読み込み処理
	void Read_logline(MJSGui *gui);
	void Set_wk(MJSGui *gui, char* str);

};

#endif/* MJSREADMJAI_H_INCLUDED */

/* ---------------------------------------------------------------------------------------------- 
 * ソース終了
 * ---------------------------------------------------------------------------------------------- */
